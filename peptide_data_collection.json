{
  "name": "Peptide Data Collection",
  "nodes": [
    {
      "parameters": {
        "triggerTimes": [
          {
            "cronExpression": "0 6 * * *"
          }
        ]
      },
      "id": "1",
      "name": "DC Cron",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "functionCode": "return [{ json: { searchTerms: [\"peptide therapy\", \"BPC-157\", \"TB-500\", \"GLP-1\", \"Retatrutide\", \"peptide injection\", \"peptide benefits\"] } }];"
      },
      "id": "2",
      "name": "Generate Terms",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [450, 300]
    },
    {
      "parameters": {
        "url": "https://www.googleapis.com/youtube/v3/search",
        "method": "GET",
        "responseFormat": "json",
        "queryParametersUi": {
          "parameter": [
            { "name": "part", "value": "snippet" },
            { "name": "q", "value": "{{ $json.searchTerms[0] }}" },
            { "name": "maxResults", "value": "10" }
          ]
        },
        "options": {}
      },
      "id": "3",
      "name": "YouTube Search",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [700, 200],
      "credentials": {
        "googleApi": {
          "id": "youtube-credential-id",
          "name": "Google API"
        }
      }
    },
    {
      "parameters": {
        "url": "https://api.tikapi.io/public/search",
        "method": "GET",
        "responseFormat": "json",
        "queryParametersUi": {
          "parameter": [
            { "name": "q", "value": "{{ $json.searchTerms[0] }}" },
            { "name": "limit", "value": "10" }
          ]
        },
        "options": {}
      },
      "id": "4",
      "name": "TikTok Search",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [700, 350],
      "credentials": {
        "httpHeaderAuth": {
          "id": "tiktok-credential-id",
          "name": "TikTok API Key"
        }
      }
    },
    {
      "parameters": {
        "url": "https://graph.facebook.com/v18.0/ig_hashtag_search",
        "method": "GET",
        "responseFormat": "json",
        "queryParametersUi": {
          "parameter": [
            { "name": "q", "value": "{{ $json.searchTerms[0] }}" },
            { "name": "user_id", "value": "YOUR_USER_ID" }
          ]
        },
        "options": {}
      },
      "id": "5",
      "name": "IG Hashtag Search",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [700, 500],
      "credentials": {
        "oAuth2Api": {
          "id": "instagram-credential-id",
          "name": "Instagram OAuth2"
        }
      }
    },
    {
      "parameters": {
        "url": "https://api.twitter.com/2/tweets/search/recent",
        "method": "GET",
        "responseFormat": "json",
        "queryParametersUi": {
          "parameter": [
            { "name": "query", "value": "{{ $json.searchTerms[0] }}" },
            { "name": "max_results", "value": "10" }
          ]
        },
        "options": {}
      },
      "id": "6",
      "name": "Twitter Search",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [700, 650],
      "credentials": {
        "twitterOAuth2Api": {
          "id": "twitter-credential-id",
          "name": "Twitter OAuth2"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "const normalizedItems = [];\n\n// Process YouTube results\nif (items[0] && items[0].json.items) {\n  items[0].json.items.forEach(item => {\n    normalizedItems.push({\n      json: {\n        platform: 'YouTube',\n        title: item.snippet.title,\n        url: `https://www.youtube.com/watch?v=${item.id.videoId}`,\n        score: 1 // Placeholder scoring\n      }\n    });\n  });\n}\n\n// Process TikTok results\nif (items[1] && items[1].json.data) {\n  items[1].json.data.forEach(item => {\n    normalizedItems.push({\n      json: {\n        platform: 'TikTok',\n        title: item.title || 'No title',\n        url: item.url || 'No URL',\n        score: 1 // Placeholder scoring\n      }\n    });\n  });\n}\n\n// Process Instagram results\nif (items[2] && items[2].json.data) {\n  items[2].json.data.forEach(item => {\n    normalizedItems.push({\n      json: {\n        platform: 'Instagram',\n        title: item.name || 'No title',\n        url: `https://www.instagram.com/explore/tags/${item.name}/`,\n        score: 1 // Placeholder scoring\n      }\n    });\n  });\n}\n\n// Process Twitter results\nif (items[3] && items[3].json.data) {\n  items[3].json.data.forEach(item => {\n    normalizedItems.push({\n      json: {\n        platform: 'Twitter',\n        title: item.text,\n        url: `https://twitter.com/i/status/${item.id}`,\n        score: 1 // Placeholder scoring\n      }\n    });\n  });\n}\n\nreturn normalizedItems;"
      },
      "id": "7",
      "name": "Normalize & Score",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1000, 400]
    },
    {
      "parameters": {
        "operation": "insert",
        "collection": "content_items",
        "fields": {
          "platform": "{{ $json.platform }}",
          "title": "{{ $json.title }}",
          "url": "{{ $json.url }}",
          "score": "{{ $json.score }}",
          "timestamp": "{{ $now }}"
        }
      },
      "id": "8",
      "name": "Store Content",
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1,
      "position": [1250, 400],
      "credentials": {
        "mongoDb": {
          "id": "mongodb-credential-id",
          "name": "MongoDB"
        }
      }
    }
  ],
  "connections": {
    "DC Cron": {
      "main": [
        [
          {
            "node": "Generate Terms",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Terms": {
      "main": [
        [
          {
            "node": "YouTube Search",
            "type": "main",
            "index": 0
          },
          {
            "node": "TikTok Search",
            "type": "main",
            "index": 0
          },
          {
            "node": "IG Hashtag Search",
            "type": "main",
            "index": 0
          },
          {
            "node": "Twitter Search",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "YouTube Search": {
      "main": [
        [
          {
            "node": "Normalize & Score",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TikTok Search": {
      "main": [
        [
          {
            "node": "Normalize & Score",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "IG Hashtag Search": {
      "main": [
        [
          {
            "node": "Normalize & Score",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Twitter Search": {
      "main": [
        [
          {
            "node": "Normalize & Score",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "Normalize & Score": {
      "main": [
        [
          {
            "node": "Store Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "timezone": "UTC",
    "errorWorkflow": ""
  },
  "active": false,
  "versionId": "83e22087-88c8-4b8b-9afa-e322c5343554",
  "id": "066b836f-1e38-4619-8994-e93bb91829b9"
}
